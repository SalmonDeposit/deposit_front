trigger:
- master

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  ${{ if eq( variables['Build.SourceBranchName'], 'master' ) }}:
    buildVersion: 'production'
  ${{ if eq( variables['Build.SourceBranchName'], 'develop' ) }}:
    buildVersion: 'test'

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

- script: npm install
  displayName: 'npm install'
  workingDirectory: $(Build.SourcesDirectory)

- script: npm run build
  displayName: 'npm build'
  workingDirectory: $(Build.SourcesDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'dist'
    ArtifactName: 'drop/dist'
    publishLocation: 'Container'
  displayName: 'Publish $(buildVersion) artifact'

- script: ls $(Build.SourcesDirectory)
  displayName: 'List drop/dist directory'
  
- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'ssh-deposit'
    sourceFolder: '$(Build.SourcesDirectory)/dist/deposit_front/'
    contents: '**'
    targetFolder: '/var/www/app.deposit.ovh'
    readyTimeout: '20000'